<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:navigation="clr-namespace:SizeBench.GUI.Controls.Navigation"
    xmlns:controls="clr-namespace:SizeBench.GUI.Controls"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    >
    <!-- SizeBenchFrame and all the assorted bits within it, broadly copied from WPF's Frame style but simplified and tweaked -->
    <!--#region SizeBenchFrame -->
    <SolidColorBrush x:Key="SizeBenchFrameButton.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="SizeBenchFrameButton.Pressed.Background" Color="#FFC4E5F6"/>

    <Style x:Key="SizeBenchFrameHomeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ToolTipService.ToolTip" Value="Home"/>
        <Setter Property="Content" Value="&#xE10F;"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="SizeBenchFrameNavigationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ToolTipService.ToolTip" Value="Back"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource SizeBenchFrameButton.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource SizeBenchFrameButton.Pressed.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SizeBenchFrameDeeplinkButtonSytle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ToolTipService.ToolTip" Value="Copy deeplink to clipboard"/>
        <Setter Property="Content" Value="&#xE71B;"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="{x:Type navigation:SizeBenchFrame}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type navigation:SizeBenchFrame}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <DockPanel>
                            <Grid DockPanel.Dock="Top" Height="22">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!-- TODO: Consider changing GoHomeCommand to be a RoutedUICommand like back is done? -->
                                <Button Grid.Column="0" Margin="3,0,1,0" Style="{StaticResource SizeBenchFrameHomeButtonStyle}" Command="{Binding DataContext.GoHomeCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Button Grid.Column="1" Margin="3,0,1,0" Style="{StaticResource SizeBenchFrameNavigationButtonStyle}" Command="NavigationCommands.BrowseBack" ToolTip="Back" Content="&#xE112;"/>
                                <Button Grid.Column="2" Margin="1,0,0,0" Style="{StaticResource SizeBenchFrameNavigationButtonStyle}" Command="NavigationCommands.BrowseForward" ToolTip="Forward" Content="&#xE111;"/>
                                <TextBox Grid.Column="3" Margin="8,0,8,0" Text="{Binding Source, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsReadOnly="True"/>
                                <Button Grid.Column="4" Margin="0,0,8,0" Style="{StaticResource SizeBenchFrameDeeplinkButtonSytle}" Command="{Binding DataContext.CopyDeeplinkToClipboardCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                            <ContentPresenter x:Name="PART_FrameCP"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!-- NonReloadingTabControl, and things it refers to - based off TabControl's default style -->
    <!--#region NonReloadingTabControl -->
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
    <Style TargetType="{x:Type controls:NonReloadingTabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NonReloadingTabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <Grid x:Name="PART_ItemsHolder"
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!-- ContentDialog, and things it refers to - based off ContentDialog from Microsoft.UI.Xaml -->
    <!--#region ContentDialog -->
    <sys:Double x:Key="ContentDialogMinWidth">320</sys:Double>
    <sys:Double x:Key="ContentDialogMaxWidth">548</sys:Double>
    <sys:Double x:Key="ContentDialogMinHeight">184</sys:Double>
    <sys:Double x:Key="ContentDialogMaxHeight">756</sys:Double>
    <sys:Double x:Key="ContentDialogButtonMinWidth">130</sys:Double>
    <sys:Double x:Key="ContentDialogButtonMaxWidth">202</sys:Double>
    <sys:Double x:Key="ContentDialogButtonMinHeight">32</sys:Double>
    <sys:Double x:Key="ContentDialogButtonHeight">32</sys:Double>
    <sys:Double x:Key="ContentDialogTitleMaxHeight">56</sys:Double>
    <Thickness x:Key="ContentDialogBorderWidth">2</Thickness>
    <Thickness x:Key="ContentDialogButton1HostMargin">0,0,4,0</Thickness>
    <Thickness x:Key="ContentDialogButton2HostMargin">0,0,0,0</Thickness>
    <Thickness x:Key="ContentDialogContentMargin">0,0,0,0</Thickness>
    <Thickness x:Key="ContentDialogContentScrollViewerMargin">0,0,0,0</Thickness>
    <Thickness x:Key="ContentDialogTitleMargin">0,0,0,12</Thickness>
    <SolidColorBrush x:Key="ContentDialogForeground" Color="Black" />
    <SolidColorBrush x:Key="ContentDialogBackground" Color="LightGray"/>
    <SolidColorBrush x:Key="ContentDialogBorderBrush" Color="Black" />
    <SolidColorBrush x:Key="ContentDialogLightDismissOverlayBackground" Color="DarkGray" />
    <SolidColorBrush x:Key="ContentDialogBackgroundThemeBrush" Color="LightGray" />
    <SolidColorBrush x:Key="ContentDialogBorderThemeBrush" Color="Green" />
    <SolidColorBrush x:Key="ContentDialogContentForegroundBrush" Color="Black" />
    <SolidColorBrush x:Key="ContentDialogDimmingThemeBrush" Color="#99FFFFFF" />
    <Thickness x:Key="ContentDialogCommandSpaceMargin">0,24,0,0</Thickness>
    <Style TargetType="{x:Type controls:ContentDialog}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ContentDialog}">
                    <Border x:Name="Container">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DialogShowingStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="DialogHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False" />
                                            </BooleanAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.05" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.05" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.083" Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="DialogShowing">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.167" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="DialogHidden" />
                                <VisualState x:Name="DialogShowing">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement" Storyboard.TargetProperty="(KeyboardNavigation.TabNavigation)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static KeyboardNavigationMode.Cycle}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonsVisibilityStates">
                                <VisualState x:Name="AllVisible" />
                                <VisualState x:Name="NoneVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CommandSpace" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="LayoutRoot"
                              Visibility="Hidden">
                            <Border x:Name="BackgroundElement"
                                    CornerRadius="4"
                                    Background="White"
                                    BorderThickness="{StaticResource ContentDialogBorderWidth}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    MinWidth="{StaticResource ContentDialogMinWidth}"
                                    MaxWidth="{StaticResource ContentDialogMaxWidth}"
                                    MinHeight="{StaticResource ContentDialogMinHeight}"
                                    MaxHeight="{StaticResource ContentDialogMaxHeight}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="ScaleTransform" />
                                </Border.RenderTransform>
                                <Grid x:Name="DialogSpace" Margin="24,18,24,24">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollViewer x:Name="ContentScrollViewer" Margin="{StaticResource ContentDialogContentScrollViewerMargin}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentControl x:Name="Title" Margin="{StaticResource ContentDialogTitleMargin}" Content="{TemplateBinding Title}" ContentTemplate="{TemplateBinding TitleTemplate}" FontSize="20" FontWeight="Normal" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" VerticalAlignment="Top" IsTabStop="False">
                                                <ContentControl.Template>
                                                    <ControlTemplate TargetType="ContentControl">
                                                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    </ControlTemplate>
                                                </ContentControl.Template>
                                            </ContentControl>
                                            <!-- Segoe MDL Assets 2 at 0xE711 is the 'x' glyph for closing the dialog -->
                                            <Button Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right"
                                                    Command="{TemplateBinding ClosedByUserCommand}"
                                                    Visibility="{TemplateBinding CloseButtonVisibility}"
                                                    Width="16" Height="16"
                                                    FontFamily="Segoe MDL2 Assets"
                                                    FontSize="12"
                                                    BorderThickness="0"
                                                    Background="Transparent"
                                                    Padding="0"
                                                    Margin="10,0,0,0"
                                                    Content="&#xE711;"/>
                                            <ContentPresenter x:Name="Content" Grid.Row="1" Grid.ColumnSpan="2"
                                                              Content="{TemplateBinding Content}" 
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                              Margin="{StaticResource ContentDialogContentMargin}"/>
                                        </Grid>
                                    </ScrollViewer>
                                    <Grid x:Name="CommandSpace" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="{StaticResource ContentDialogCommandSpaceMargin}"
                                          KeyboardNavigation.DirectionalNavigation="Contained" FocusManager.IsFocusScope="True">
                                        <Button x:Name="PrimaryButton" Content="{TemplateBinding PrimaryButtonText}" Command="{TemplateBinding PrimaryButtonCommand}"
                                                HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="3" MinWidth="93" MinHeight="23" Margin="0,0,2,0"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>
